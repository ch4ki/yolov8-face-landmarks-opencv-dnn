[project]
name = "yolov8-face-landmarks-opencv-dnn"
version = "0.2.0"
description = "YOLOv8 Face Detection and Tracking with OpenCV DNN - A standalone face detection and tracking system"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "YOLOv8 Face Team"},
]
keywords = ["face-detection", "face-tracking", "yolov8", "opencv", "computer-vision", "deep-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "scipy>=1.7.0",
    "scikit-image>=0.18.0",
    "lap>=0.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "isort>=5.0",
    "flake8>=3.8",
    "mypy>=0.910",
]
yaml = [
    "PyYAML>=5.4.0",
]
quality = [
    "onnx>=1.10.0",
    "onnxruntime>=1.10.0",
]
all = [
    "yolov8-face-landmarks-opencv-dnn[yaml,quality]",
]

[project.urls]
Homepage = "https://github.com/your-username/yolov8-face-landmarks-opencv-dnn"
Repository = "https://github.com/your-username/yolov8-face-landmarks-opencv-dnn"
Documentation = "https://github.com/your-username/yolov8-face-landmarks-opencv-dnn#readme"
Issues = "https://github.com/your-username/yolov8-face-landmarks-opencv-dnn/issues"

[project.scripts]
yolov8-face = "main:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
